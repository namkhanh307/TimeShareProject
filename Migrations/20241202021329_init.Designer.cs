// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeShareProject.Models;

#nullable disable

namespace TimeShareProject.Migrations
{
    [DbContext(typeof(_4restContext))]
    [Migration("20241202021329_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TimeShareProject.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("password");

                    b.Property<int?>("Role")
                        .HasColumnType("int")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__Account__3214EC27CAA521F4");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("TimeShareProject.Models.Block", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("BlockNumber")
                        .HasColumnType("int")
                        .HasColumnName("blockNumber");

                    b.Property<int?>("EndDay")
                        .HasColumnType("int")
                        .HasColumnName("endDay");

                    b.Property<int?>("EndMonth")
                        .HasColumnType("int")
                        .HasColumnName("endMonth");

                    b.Property<double?>("Proportion")
                        .HasColumnType("float")
                        .HasColumnName("proportion");

                    b.Property<int?>("StartDay")
                        .HasColumnType("int")
                        .HasColumnName("startDay");

                    b.Property<int?>("StartMonth")
                        .HasColumnType("int")
                        .HasColumnName("startMonth");

                    b.HasKey("Id");

                    b.ToTable("Block", (string)null);
                });

            modelBuilder.Entity("TimeShareProject.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phone");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("Contact", (string)null);
                });

            modelBuilder.Entity("TimeShareProject.Models.New", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int")
                        .HasColumnName("transactionID");

                    b.Property<int?>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userID");

                    b.HasKey("Id");

                    b.HasIndex("TransactionId");

                    b.HasIndex("UserId");

                    b.ToTable("New", (string)null);
                });

            modelBuilder.Entity("TimeShareProject.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<int?>("Area")
                        .HasColumnType("int")
                        .HasColumnName("area");

                    b.Property<string>("DetailDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("detailDescription");

                    b.Property<string>("GeneralDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("generalDescription");

                    b.Property<string>("Image1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image1");

                    b.Property<string>("Image2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image2");

                    b.Property<string>("Image3")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image3");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shortName");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.Property<int?>("TotalUnit")
                        .HasColumnType("int")
                        .HasColumnName("totalUnit");

                    b.HasKey("Id");

                    b.ToTable("Project", (string)null);
                });

            modelBuilder.Entity("TimeShareProject.Models.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bathroom")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("bathroom");

                    b.Property<int?>("Beds")
                        .HasColumnType("int")
                        .HasColumnName("beds");

                    b.Property<string>("FrontImage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("frontImage");

                    b.Property<string>("InsideImage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("insideImage");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Occupancy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("occupancy");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("projectID");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime")
                        .HasColumnName("saleDate");

                    b.Property<string>("SideImage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sideImage");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("size");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.Property<string>("UniqueFeature")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("uniqueFeature");

                    b.Property<double?>("UnitPrice")
                        .HasColumnType("float")
                        .HasColumnName("unitPrice");

                    b.Property<string>("ViewImage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("viewImage");

                    b.Property<string>("Views")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("views");

                    b.HasKey("Id")
                        .HasName("PK_VacationList");

                    b.HasIndex("ProjectId");

                    b.ToTable("Property", (string)null);
                });

            modelBuilder.Entity("TimeShareProject.Models.Rate", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("projectID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userID");

                    b.Property<string>("DetailRate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("detailRate");

                    b.Property<int?>("StarRate")
                        .HasColumnType("int")
                        .HasColumnName("starRate");

                    b.HasKey("ProjectId", "UserId")
                        .HasName("PK__Rate__70B22D9023FDCE83");

                    b.HasIndex("UserId");

                    b.ToTable("Rate", (string)null);
                });

            modelBuilder.Entity("TimeShareProject.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlockId")
                        .HasColumnType("int")
                        .HasColumnName("blockID");

                    b.Property<int?>("Order")
                        .HasColumnType("int")
                        .HasColumnName("order");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int")
                        .HasColumnName("propertyID");

                    b.Property<DateTime?>("RegisterDate")
                        .HasColumnType("datetime")
                        .HasColumnName("registerDate");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userID");

                    b.Property<int?>("YearQuantity")
                        .HasColumnType("int")
                        .HasColumnName("yearQuantity");

                    b.HasKey("Id")
                        .HasName("PK_VacationRegistration");

                    b.HasIndex("BlockId");

                    b.HasIndex("PropertyId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservation", (string)null);
                });

            modelBuilder.Entity("TimeShareProject.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<DateTime?>("DeadlineDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deadlineDate");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int")
                        .HasColumnName("reservationID");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.Property<string>("TransactionCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("transactionCode");

                    b.Property<int?>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId");

                    b.ToTable("Transaction", (string)null);
                });

            modelBuilder.Entity("TimeShareProject.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("accountID");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime")
                        .HasColumnName("dateOfBirth");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("IdbackImage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IDBackImage");

                    b.Property<string>("IdfrontImage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IDFrontImage");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phoneNumber");

                    b.Property<bool?>("Sex")
                        .HasColumnType("bit")
                        .HasColumnName("sex");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("TimeShareProject.Models.New", b =>
                {
                    b.HasOne("TimeShareProject.Models.Transaction", "Transaction")
                        .WithMany("News")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_New_Transaction");

                    b.HasOne("TimeShareProject.Models.User", "User")
                        .WithMany("News")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_New_User");

                    b.Navigation("Transaction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TimeShareProject.Models.Property", b =>
                {
                    b.HasOne("TimeShareProject.Models.Project", "Project")
                        .WithMany("Properties")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK_Vacation_Project");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("TimeShareProject.Models.Rate", b =>
                {
                    b.HasOne("TimeShareProject.Models.Project", "Project")
                        .WithMany("Rates")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK_Rate_Project");

                    b.HasOne("TimeShareProject.Models.User", "User")
                        .WithMany("Rates")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Rate__userID__18EBB532");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TimeShareProject.Models.Reservation", b =>
                {
                    b.HasOne("TimeShareProject.Models.Block", "Block")
                        .WithMany("Reservations")
                        .HasForeignKey("BlockId")
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_Block");

                    b.HasOne("TimeShareProject.Models.Property", "Property")
                        .WithMany("Reservations")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_Property");

                    b.HasOne("TimeShareProject.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_User");

                    b.Navigation("Block");

                    b.Navigation("Property");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TimeShareProject.Models.Transaction", b =>
                {
                    b.HasOne("TimeShareProject.Models.Reservation", "Reservation")
                        .WithMany("Transactions")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Transaction_Reservation");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("TimeShareProject.Models.User", b =>
                {
                    b.HasOne("TimeShareProject.Models.Account", "Account")
                        .WithMany("Users")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_User_Account");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("TimeShareProject.Models.Account", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("TimeShareProject.Models.Block", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("TimeShareProject.Models.Project", b =>
                {
                    b.Navigation("Properties");

                    b.Navigation("Rates");
                });

            modelBuilder.Entity("TimeShareProject.Models.Property", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("TimeShareProject.Models.Reservation", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("TimeShareProject.Models.Transaction", b =>
                {
                    b.Navigation("News");
                });

            modelBuilder.Entity("TimeShareProject.Models.User", b =>
                {
                    b.Navigation("News");

                    b.Navigation("Rates");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
